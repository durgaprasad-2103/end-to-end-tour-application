{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';// Set the user in local storage\nconst setUser=user=>{if(user){localStorage.setItem('user',JSON.stringify(user));}else{localStorage.removeItem('user');}};// Get the current user from local storage\nconst getUser=()=>{const user=localStorage.getItem('user');return user?JSON.parse(user):null;};// Register a new user\nconst register=async userData=>{try{const response=await axios.post(`${API_URL}/api/users/register`,userData);const{user}=response.data.data;// Save user to local storage\nsetUser(user);return user;}catch(error){var _error$response;throw((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||{message:'Registration failed'};}};// Login user\nconst login=async(email,password)=>{try{const response=await axios.post(`${API_URL}/api/users/login`,{email,password});const{user}=response.data.data;// Save user to local storage\nsetUser(user);return user;}catch(error){var _error$response2;throw((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||{message:'Login failed'};}};// Verify token and get current user\nconst verifyToken=async()=>{const user=getUser();if(!user||!user.token){return null;}try{const response=await axios.post(`${API_URL}/api/users/verify`,{token:user.token});const{user:currentUser}=response.data.data;// Update stored user data\nsetUser(currentUser);return currentUser;}catch(error){// If token is invalid, clear the user data\nsetUser(null);return null;}};// Logout user\nconst logout=async()=>{const user=getUser();if(user&&user._id){try{await axios.post(`${API_URL}/api/users/logout/${user._id}`);}catch(error){console.error('Error during logout:',error);}}// Clear user from local storage\nsetUser(null);};// Check if user is authenticated\nconst isAuthenticated=()=>{return!!getUser();};const authService={register,login,logout,verifyToken,getUser,isAuthenticated};export default authService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","setUser","user","localStorage","setItem","JSON","stringify","removeItem","getUser","getItem","parse","register","userData","response","post","data","error","_error$response","message","login","email","password","_error$response2","verifyToken","token","currentUser","logout","_id","console","isAuthenticated","authService"],"sources":["/Users/durgaprasadcreddy/Desktop/project/tourbuddy/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Set the user in local storage\nconst setUser = (user) => {\n  if (user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  } else {\n    localStorage.removeItem('user');\n  }\n};\n\n// Get the current user from local storage\nconst getUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\n\n// Register a new user\nconst register = async (userData) => {\n  try {\n    const response = await axios.post(`${API_URL}/api/users/register`, userData);\n    const { user } = response.data.data;\n    \n    // Save user to local storage\n    setUser(user);\n    \n    return user;\n  } catch (error) {\n    throw error.response?.data || { message: 'Registration failed' };\n  }\n};\n\n// Login user\nconst login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/api/users/login`, { email, password });\n    const { user } = response.data.data;\n    \n    // Save user to local storage\n    setUser(user);\n    \n    return user;\n  } catch (error) {\n    throw error.response?.data || { message: 'Login failed' };\n  }\n};\n\n// Verify token and get current user\nconst verifyToken = async () => {\n  const user = getUser();\n  \n  if (!user || !user.token) {\n    return null;\n  }\n  \n  try {\n    const response = await axios.post(`${API_URL}/api/users/verify`, { token: user.token });\n    const { user: currentUser } = response.data.data;\n    \n    // Update stored user data\n    setUser(currentUser);\n    \n    return currentUser;\n  } catch (error) {\n    // If token is invalid, clear the user data\n    setUser(null);\n    return null;\n  }\n};\n\n// Logout user\nconst logout = async () => {\n  const user = getUser();\n  \n  if (user && user._id) {\n    try {\n      await axios.post(`${API_URL}/api/users/logout/${user._id}`);\n    } catch (error) {\n      console.error('Error during logout:', error);\n    }\n  }\n  \n  // Clear user from local storage\n  setUser(null);\n};\n\n// Check if user is authenticated\nconst isAuthenticated = () => {\n  return !!getUser();\n};\n\nconst authService = {\n  register,\n  login,\n  logout,\n  verifyToken,\n  getUser,\n  isAuthenticated\n};\n\nexport default authService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}