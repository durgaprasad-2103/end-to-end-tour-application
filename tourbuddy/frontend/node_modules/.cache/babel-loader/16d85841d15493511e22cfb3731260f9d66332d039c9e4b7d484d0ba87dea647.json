{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import authService from'../services/authService';// Create auth context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// Context provider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Check for saved user on initial load\nuseEffect(()=>{const checkAuth=async()=>{try{// Verify the token and get current user data\nconst currentUser=await authService.verifyToken();setUser(currentUser);}catch(err){console.error('Auth verification error:',err);setError('Authentication failed');}finally{setLoading(false);}};checkAuth();},[]);// Handle user login\nconst login=async(email,password)=>{try{setLoading(true);setError(null);const loggedInUser=await authService.login(email,password);setUser(loggedInUser);return loggedInUser;}catch(err){setError(err.message||'Login failed');throw err;}finally{setLoading(false);}};// Handle user registration\nconst register=async userData=>{try{setLoading(true);setError(null);const newUser=await authService.register(userData);setUser(newUser);return newUser;}catch(err){setError(err.message||'Registration failed');throw err;}finally{setLoading(false);}};// Handle user logout\nconst logout=async()=>{try{await authService.logout();setUser(null);}catch(err){console.error('Logout error:',err);}};// Update user details in state and localStorage\nconst updateUserDetails=updatedUser=>{if(!updatedUser)return;setUser(updatedUser);authService.setUser(updatedUser);};// Context value\nconst value={user,loading,error,login,register,logout,updateUserDetails,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Custom hook to use auth context\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","authService","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","checkAuth","currentUser","verifyToken","err","console","login","email","password","loggedInUser","message","register","userData","newUser","logout","updateUserDetails","updatedUser","value","isAuthenticated","Provider","useAuth","context","Error"],"sources":["/Users/durgaprasadcreddy/Desktop/project/tourbuddy/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport authService from '../services/authService';\n\n// Create auth context\nconst AuthContext = createContext();\n\n// Context provider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check for saved user on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        // Verify the token and get current user data\n        const currentUser = await authService.verifyToken();\n        setUser(currentUser);\n      } catch (err) {\n        console.error('Auth verification error:', err);\n        setError('Authentication failed');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  // Handle user login\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const loggedInUser = await authService.login(email, password);\n      setUser(loggedInUser);\n      return loggedInUser;\n    } catch (err) {\n      setError(err.message || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle user registration\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const newUser = await authService.register(userData);\n      setUser(newUser);\n      return newUser;\n    } catch (err) {\n      setError(err.message || 'Registration failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle user logout\n  const logout = async () => {\n    try {\n      await authService.logout();\n      setUser(null);\n    } catch (err) {\n      console.error('Logout error:', err);\n    }\n  };\n  \n  // Update user details in state and localStorage\n  const updateUserDetails = (updatedUser) => {\n    if (!updatedUser) return;\n    \n    setUser(updatedUser);\n    authService.setUser(updatedUser);\n  };\n\n  // Context value\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateUserDetails,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}